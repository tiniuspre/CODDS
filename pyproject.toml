[tool.ruff] # https://docs.astral.sh/ruff/settings/#top-level
line-length = 160
force-exclude = true
output-format = "concise"
target-version = 'py312'

extend-exclude = [ # https://docs.astral.sh/ruff/settings/#extend-exclude
    ".*",
    ".vscode",
    ".history",
    "venv",
    ".venv",
    "node_modules",
    "dist",
    "site-packages",
    "migrations",
    "/database",
    "/logs",
    "root/utils/routes.py",
    "certs/*",
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
line-ending = "lf"
#skip-magic-trailing-comma = false


[tool.ruff.lint]
# See list of all rules: rulehttps://docs.astral.sh/ruff/rules
preview = true
explicit-preview-rules = true


select = [
    "PL", # pylint
    "I", # isort.
    "RUF008", # ruff
    "RUF009", # ruff
    "RUF013", # ruff
    "RUF015", # ruff
    "RUF016", # ruff
    "RUF100", # ruff
    "RUF200", # ruff
    "ANN001", # flake8-annotations
    "ANN201", # flake8-annotations
    "ANN202", # flake8-annotations
    "ANN205", # flake8-annotations
    "ANN206", # flake8-annotations
    "E", # pycodestyle (Error)
    "F", # Pyflakes
    "B", # flake8-bugbear
    "Q", # flake8-quotes
    "RSE102", # flake8-raise
    "D204", # pydocstyle
    "D200", # pydocstyle
    "D211", # pydocstyle
    "T20", # flake8-print
    "S", # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "DJ", # Flake8-Django
    "C90", # maccabe
    "W", # pycodestyle (Warning)
    "N", # flake8-broken-line
    "UP",
    "FBT",
    "C4",
    "T20",
    "PYI",
    "RET",
    "SIM",
    "TID",
    "PERF",
    "A",
]
ignore = [
    "PLR0913", # pylint
    "PLR5501", # pylint
    "PLW2901", # pylint
    "PLR0915", # pylint
    "PLR2004", # pylint
    "PLR0912", # pylint
    "PLR0911", # pylint
    "Q000", # flake8-quotes # Ruff formatter handles this.
    "Q003", # flake8-quotes # Ruff formatter handles this.
    "S101", # Use of assert
    "DJ001", # Django null=true on text/char fileds
    "RET504" # Return statement
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["PLR0917", "ANN201", "ANN001", "S106"]




### isort ###

[tool.ruff.lint.isort]
length-sort = true # Sort imports on their dotted path length.
required-imports = ["from __future__ import annotations"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "rest_framework", # From custom section below.
    "django", # From custom section below.
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"django" = ["django"] # Used in section-order.
"rest_framework" = ["rest_framework"] # Used in section-order.



[tool.ruff.lint.pylint]
max-positional-args = 1

[tool.ruff.lint.mccabe]
max-complexity = 5